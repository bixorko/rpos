{"version":3,"sources":["rpos.ts"],"names":[],"mappings":"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","file":"rpos.js","sourcesContent":["/// <reference path=\"./rpos.d.ts\"/>\n\n/*\nThe MIT License(MIT)\n\nCopyright(c) 2015 Jeroen Versteege\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files(the \"Software\"), to deal \nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and / or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject tothe following conditions:\n\n    The above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nrequire(\"./lib/extension\");\n\nimport http = require(\"http\");\nimport express = require(\"express\");\nimport { Utils } from \"./lib/utils\";\nimport Camera = require(\"./lib/camera\");\nimport PTZDriver = require(\"./lib/PTZDriver\");\nimport DeviceService = require(\"./services/device_service\");\nimport MediaService = require(\"./services/media_service\");\nimport PTZService = require(\"./services/ptz_service\");\nimport ImagingService = require(\"./services/imaging_service\");\nimport DiscoveryService = require(\"./services/discovery_service\");\n\nvar utils = Utils.utils;\nlet pjson = require(\"./package.json\");\nlet config = <rposConfig>require(\"./rposConfig.json\");\n\nutils.log.level = <Utils.logLevel>config.logLevel;\n\nif (utils.isPi()) {\n  var model = require('rpi-version')();\n  config.DeviceInformation.Manufacturer = 'RPOS Raspberry Pi';\n  config.DeviceInformation.Model = model; \n}\n\nif (utils.isMac()) {\n  const os = require('os');\n  const macosRelease = require('macos-release');\n  config.DeviceInformation.Manufacturer = 'RPOS AppleMac';\n  config.DeviceInformation.Model = macosRelease()['name'] + ' ' + macosRelease()['version'];\n}\n\n\nconfig.DeviceInformation.SerialNumber = utils.getSerial();\nconfig.DeviceInformation.FirmwareVersion = pjson.version;\nutils.setConfig(config);\nutils.testIpAddress();\n\nfor (var i in config.DeviceInformation) {\n  utils.log.info(\"%s : %s\", i, config.DeviceInformation[i]);\n}\n\nlet webserver = express();\nlet httpserver = http.createServer(webserver);\nhttpserver.listen(config.ServicePort);\n\nlet ptz_driver = new PTZDriver(config);\n\nlet camera = new Camera(config, webserver);\nlet device_service = new DeviceService(config, httpserver, ptz_driver.process_ptz_command);\nlet ptz_service = new PTZService(config, httpserver, ptz_driver.process_ptz_command, ptz_driver);\nlet imaging_service = new ImagingService(config, httpserver, ptz_driver.process_ptz_command);\nlet media_service = new MediaService(config, httpserver, camera, ptz_service); // note ptz_service dependency\nlet discovery_service = new DiscoveryService(config);\n\ndevice_service.start();\nmedia_service.start();\nptz_service.start();\nimaging_service.start();\ndiscovery_service.start();\n"]}